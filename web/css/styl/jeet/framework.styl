@import 'nib'

/*  Syntax quick reference
 *  ----------------------
 *  gutter[gut, g] = 1
 *  cf() - clearfix
 *  center(max_width = 1410px)
 *  column[col](ratios = 1, offset = false, g = gutter)
 *  span(ratio = 1, offset = false)
 *  shift(ratios = 0, g = gutter)
 *  unshift()
 *  getSpan(ratio)
 *  getColumn(ratios = 1, g = gutter, nested = false)
 *  bp(w = 705px, mobile_first = false[mf])
 *  endbp()
 *  stack(align = center[c, left, l, right, r])
 *  edit()
 *  pxfix()
 */

gutter = 1
parent_first = false
layout_direction = LTR

center(max_width = 1410px)
    cf()
    max-width max_width
    float none
    display block
    margin-right auto
    margin-left auto
    *margin-right auto
    *margin-left auto

column(ratios = 1/2, offset = 0, g = gutter, cycle = 0, uncycle = 0)
    // Gather Information
    side = margin_side = getLayoutDirection()
    widths = getColumn(ratios, g)
    margin_l = margin_r = widths[1]
    margin_l_n = margin_r_n = 0
    // Calculate Offset
    unless offset == 0
        edge = offset[1]
        edge is true ? gutter_mult = 2 : gutter_mult = 3
        offset = offset[0]
        if offset < 0
            offset *= -1
            offset = getColumn(offset, widths[1], nested)[0]
            margin_r = margin_r_n = offset + widths[1] * gutter_mult
        else
            offset = getColumn(offset, widths[1], nested)[0]
            margin_l = margin_l_n = offset + widths[1] * gutter_mult
    // Mixin
    cf()
    float side
    width (widths[0])%
    margin-{margin_side} (margin_l)%
    margin-{opposite-position(margin_side)} (margin_r)%
    if uncycle != 0
        &:nth-child({uncycle}n + 1)
            margin-{margin_side} (margin_l)%
        &:nth-child({uncycle}n)
            margin-{opposite-position(margin_side)} (margin_r)%
    if cycle != 0
        &:nth-child({cycle}n + 1)
            margin-{margin_side} (margin_l_n)%
        &:nth-child({cycle}n)
            margin-{opposite-position(margin_side)} (margin_r_n)%
    else
        &:first-child
            margin-{margin_side} (margin_l_n)%
        &:last-child
            margin-{opposite-position(margin_side)} (margin_r_n)%

span(ratio = 1/2, offset = 0)
    // Gather Information
    side = getLayoutDirection()
    width = getSpan(ratio)
    margin_l = margin_r = 0
    // Calculate Offset
    unless offset == 0
        if offset < 0
            offset *= -1
            margin_r = getSpan(offset)
        else
            margin_l = getSpan(offset)
    // Mixin
    cf()
    float side
    width (width)%
    margin-{side} (margin_l)%
    margin-{opposite-position(side)} (margin_r)%

shift(ratios = 0, g = gutter)
    // Get direction information
    side = getLayoutDirection()
    if side == right
        ratios = replace-nth(ratios, 0, ratios[0] * -1)
    widths = getColumn(ratios, g)
    translate = widths[0] + widths[1] * 2
    // Shift
    position relative
    left (translate)%

unshift()
    position static
    left 0

getSpan(ratio = 1/2)
    // Returns the width of a span
    return ratio * 100

getColumn(ratios = 1/2, g = gutter)
    // Returns the width and gutter for a column
    ratios = reverse(ratios) unless parent_first is true
    w = 100
    for ratio in ratios
        g = g / w * 100
        w = 100 * ratio - 2 * g + 2 * ratio * g
    return w g

getLayoutDirection()
    layout_direction == RTL ? result = right : result = left
    return result

bp(w = 705px, mobile_first = false)
    if (mobile_first == mf || mobile_first == true)
        unquote("@media all and (min-width: " + w + ") {")
    else
        unquote("@media all and (max-width: " + w + ") {")
endbp()
    unquote("}")

stack(align = center)
    margin_side = getLayoutDirection()
    display block
    width 100%
    margin-left auto
    margin-right auto
    margin-bottom (g * 3)%
    &:first-child
        margin-{margin_side} auto
    &:last-child
        margin-{opposite-position(margin_side)} auto
    if (align == center) or (align == c)
        text-align center
    if (align == l) or (align == l)
        text-align left
    if (align == r) or (align == r)
        text-align right

edit()
    body *
        transition 200ms ease all
        background rgba(#000, .15)

pxfix() // http://stackoverflow.com/a/12371926/1242079
    float none
    overflow hidden
    width auto

// List functions
replace-nth(list, index, value)
    result = ()
    index = length(list) + index if index < 0
    for i in (0..(length(list) - 1))
        if i == index
            append(result, value)
        else
            append(result, list[i])
    return result

remove-nth(list, index)
    result = ()
    index = length(list) + index if index < 0  
    for i in (0..(length(list) - 1))
        if i != index 
            append(result, list[i])
    return result

reverse(list)
    result = ()
    for item in list
        prepend(result, item)
    return result

// Function aliases
g = gutter
gut = gutter
col = column
off = offset
cf = clearfix

// Config junk
*
    box-sizing(border-box)
    *behavior url(js/vendor/boxsizing.htc)
html
    overflow-y scroll
    overflow-x hidden
body
    cf()
    width 100%
img, video, audio, embed, object, input, iframe
    max-width 100%
.placeholder
    color #aaa