@import 'nib'

/*  Syntax quick reference
 *  ----------------------
 *  gutter[gut, g] = 1[float between 0 and 1]
 *  cf() - clearfix
 *  center(max_width = 1410px)
 *  column[col](ratio = 1, nested = false, parent_ratio = 1, g = gutter)
 *  span(ratio = 1)
 *  offset[off](ratio = 1, nested = false, left_or_right = left[right], col_or_span = column[col, c, span, s], g = gutter)
 *  get(ratio = 1, nested = false, col_or_span = column[col, c, span, s], g = gutter)
 *  bp(w = 705px, mobile_first = false[mf])
 *  endbp()
 *  stack(align = center[c, left, l, right, r])
 *  edit()
 *  pxfix()
 */

gutter = 1

center(max_width = 1410px)
    cf()
    max-width max_width
    float none !important
    display block
    margin-right auto !important
    margin-left auto !important
    *margin-right auto !important
    *margin-left auto !important

column(ratio = 1, nested = false, parent_ratio = 1, g = gutter)
    cf()
    float left
    parent_ratio = get(parent_ratio, nested) / 100 // Get the true parent ratio
    g = g / parent_ratio // Use the ratio to get the new gutter
    width (get(ratio, nested, g: g))%
    total_gutter = (g*2) / ratio
    if (nested == true)
        &:first-child
            margin-left 0
        &:last-child
            margin-right 0
    margin-left (g)%
    margin-right (g)%

span(ratio = 1)
    cf()
    float left
    width (get(ratio, col_or_span: span))%
    margin-left 0
    margin-right 0

offset(ratio = 0, nested = false, parent_ratio = 1, left_or_right = left, col_or_span = column, g = gutter)
    if (col_or_span == column) or (col_or_span == col) or (col_or_span == c)
        parent_ratio = get(parent_ratio, nested) / 100 // Get the precise parent ratio
        g = g / parent_ratio // Use the ratio to get the new gutter
        margin = get(ratio, nested, g: g) + (g*3)
        if (left_or_right == left) or (left_or_right == l)
            margin-left (margin)%
        if (left_or_right == right) or (left_or_right == r)
            margin-right (margin)%
    if (col_or_span == span) or (col_or_span == s)
        margin = get(ratio, col_or_span: span)
        if (left_or_right == left) or (left_or_right == l)
            margin-left (margin)%
        if (left_or_right == right) or (left_or_right == r)
            margin-right (margin)%

get(ratio = 1, nested = false, col_or_span = column, g = gutter)
    if (col_or_span == span) or (col_or_span == s)
        return (ratio*100)
    if (col_or_span == column) or (col_or_span == col) or (col_or_span == c)
        total_gutter = (g*2) / ratio
        if (nested == true)
            total_gutter = total_gutter - g * 2
        return ((100 - total_gutter) * ratio)

bp(w = 705px, mobile_first = false)
    if (mobile_first == mf || mobile_first == true)
        unquote("@media all and (min-width: " + w + ") {")
    else
        unquote("@media all and (max-width: " + w + ") {")
endbp()
    unquote("}")

stack(align = center)
    display block
    width 100%
    margin-left auto !important
    margin-right auto !important
    margin-bottom (g * 3)%
    if (align == center) or (align == c)
        text-align center
    if (align == l) or (align == l)
        text-align left
    if (align == r) or (align == r)
        text-align right

edit()
    body *
        transition 200ms ease all
        background rgba(#000, .15)

pxfix() // http://stackoverflow.com/a/12371926/1242079
    float none
    overflow hidden
    width auto

// Function aliases
g = gutter
gut = gutter
col = column
off = offset
cf = clearfix

// Config junk
*
    box-sizing(border-box)
    *behavior url(js/vendor/boxsizing.htc)
html
    overflow-y scroll
    overflow-x hidden
body
    cf()
    width 100%
img, video, audio, embed, object, input, iframe
    max-width 100%
.placeholder
    color #aaa