// List functions courtesy of the wonderful folks at Team Sass
// Check out their awesome grid: Singularity

// Getter - span
@function jeet-get-span($ratio: 1) {
  @return $ratio * 100;
}

// Getter - column
@function jeet-get-column($ratios: 1, $g: $jeet-gutter) {
  $ratios: if($jeet-parent-first != true, jeet-reverse($ratios), $ratios);
  $w: 100;
  
  @each $ratio in $ratios {
    $g: $g / $w * 100;
    $w: 100 * $ratio - $g + $ratio * $g;
  }
  
  @return $w $g;
}

// Getter - layout direction
@function jeet-get-layout-direction() {
  @return if($jeet-layout-direction == "RTL", right, left);
}

// Helper - replace-nth
@function jeet-replace-nth($list, $index, $value) {
  // Fallback for Sass 3.2
  @if function-exists("set-nth") != true {
    $result: ();
    $index: if($index < 0, length($list) + $index + 1, $index);  

    @for $i from 1 through length($list) {
      $result: append($result, if($i == $index, $value, nth($list, $i)));
    }

    @return $result;  
  }

  // Sass 3.3
  @return set-nth($list, $index, $value);
}

// Helper - reverse
@function jeet-reverse($list, $recursive: false) {
  $result: ();
  
  @for $i from length($list) * -1 through -1 {
    $item: nth($list, abs($i));
    $item: if(type-of($item) == list and $recursive, jeet-reverse($item, $recursive), $item);
    $result: append($result, $item);
  }

  @return $result;
}

// Helper - opposite-direction
@function jeet-opposite-direction($dir) {
  @if $dir == "left" {
    @return right;
  }
  @else if $dir == "right" {
    @return left;
  }
  @else if index("ltr" "LTR", $dir) {
    @return rtl;
  }
  @else if index("rtl" "RTL", $dir) {
    @return ltr;
  }
  @else if $dir == "top" {
    @return bottom;
  }
  @else if $dir == "bottom" {
    @return top;
  }
  @else {
    @warn "#{$dir} is not a direction! Make sure your direction is all lowercase!";
    @return false;
  }
}
